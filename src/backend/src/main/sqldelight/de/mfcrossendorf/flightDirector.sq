-- flight director table, this simply records a time period where
-- a user is the active flight director
CREATE TABLE flightDirector (
  director_id INT                    NOT NULL PRIMARY KEY
    GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
  account_id  INT                    NOT NULL REFERENCES account (account_id),
  active      BOOLEAN                NOT NULL,
  date        DATE                   NOT NULL,
  start_time  TIME WITHOUT TIME ZONE NOT NULL,
  end_time    TIME WITHOUT TIME ZONE NULL
);


-- Indexes --

CREATE INDEX flightDirector_accountId_idx ON flightDirector (account_id);

-- there can only be one active flight director at a time
CREATE UNIQUE INDEX flightDirector_onlyOneActive_idx
  ON flightDirector (date, active)
  WHERE active IS TRUE;


-- Queries --

getFlightDirectors:
SELECT flightDirector.*, account.username FROM flightDirector
JOIN account ON flightDirector.account_id = account.account_id
ORDER BY date DESC, start_time DESC
LIMIT :limit;

getCurrentFlightDirector:
SELECT account.* FROM flightDirector
JOIN account ON flightDirector.account_id = account.account_id
WHERE date = ? AND active IS TRUE;

getCurrentFlightDirectorAccountId:
SELECT account_id FROM flightDirector
WHERE date = ? AND active IS TRUE;

addFlightDirector:
INSERT INTO flightDirector VALUES (DEFAULT, ?, TRUE, ?, ?, NULL)
RETURNING director_id;

removeFlightDirector:
UPDATE flightDirector SET active = FALSE, end_time = ?
WHERE account_id = ? AND
      date = ? AND active IS TRUE
RETURNING director_id;
